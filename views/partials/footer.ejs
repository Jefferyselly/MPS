<div class="modal micromodal-slide" id="modal-1" aria-hidden="true">
    <div class="modal__overlay" tabindex="-1" data-micromodal-close>
      <div class="modal__container" role="dialog" aria-modal="true" aria-labelledby="modal-1-title">
        <div class="modal__header">
          <h2 class="btn btn-success">
            Your class has been created
          </h2>
          <button class="modal__close" aria-label="Close modal" data-micromodal-close></button>

        </div>
        <div class="modal__content" id="modal-1-content">
          <p> Proceed to creating a new lesson under this class</p>
          <p>
            <form method="get" action="/new_lesson">
            	<p><input type="text" name="lessonTitle" placeholder="Lesson Name" class="form-control"></p>
            	<p><textarea class="form-control" name = "lessonDescription">  Lesson description</textarea></p>

            	<footer class="modal__footer">
            		<br>
          <button class="modal__btn modal__btn-primary">Create Lesson</button>
          <button class="modal__btn" data-micromodal-close aria-label="Close this dialog window">Close</button>
        </footer>
            </form>
          </p>
          
        </div>
        
      </div>
    </div>
  </div>

    <script src="/3rd_party/datatables/jquery.dataTables.js"></script>

  <script src="/3rd_party/datatables/dataTables.bootstrap4.js"></script>
  <script src="/3rd_party/datatables/demo/datatables-demo.js"></script>
  <script type="text/javascript" src="/forms/ClassForm.js"></script>
  <script type="text/javascript" src="/forms/saveLesson.js"></script>
  <script type="text/javascript" src="/forms/Compiler.js"></script>

	<script type="text/javascript">
		
		const classForm = new ClassForm("create-class");
		classForm.init();

		const lessonForm = new saveLesson;
		lessonForm.init();

	</script>
	<script type="text/javascript">
	
	const lessonEditor = new FroalaEditor("#lessonEditor");
</script>


<script type="text/javascript">
		
	let code = CodeMirror.fromTextArea(document.getElementById("code"), {
		lineNumbers : true,
		lineWrapping : true,
		value : "Type code here",
		mode : myReplace(getCookie("mime")) || "text/javascript",
		theme : "darcula",
		tabSize: 4,
		styleActiveLine: true,
		viewportMargin: Infinity,
		keyMap : "sublime"
  })
  
 $(document).ready(function(){
   document.getElementById("run").addEventListener("click",function(){
     
    var to_compile = {
				"LanguageChoice" : getCookie("languageChoice"),
				"program" : code.getValue()

      }
      $.ajax ({
			        url: "https://rextester.com/rundotnet/api",
			        type: "POST",
			        data: to_compile
			    }).done(function(data) {
            if(data.Result == null){
              const container = document.getElementById("code-display");
            container.innerHTML = JSON.stringify(data.Errors);
			        // alert(JSON.stringify(data));
            }else{
              const container = document.getElementById("code-display");
              container.innerHTML = JSON.stringify(data.Result);
            }
            
			    }).fail(function(data, err) {
            const container = document.getElementById("code-display");
            container.innerHTML = JSON.stringify(data.statusText);
			        // alert("fail " + JSON.stringify(data) + " " + JSON.stringify(err));
            
		        });


   })
 })
	


	function showWindowLabels(){

		document.getElementById("labelList").classList.toggle("show");
	}
	
// Close the dropdown menu if the user clicks outside of it
window.onclick = function(event) {
  if (!event.target.matches('.windowLabel')) {

    var dropdowns = document.getElementsByClassName("labelList");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
  }
}




</script>

</body>
</html>